import React, { useState, Fragment } from "react";
//import { CSSTransition } from 'react-transition-group';

import "./survey.css";
const SurveyMain = (props) => {
  const [step, setStep] = useState(0);

  const list = [
    {
      id: 0,
      question: `Ë¶™ÊÑõÁöÑÂ∞àÂ±¨ÊúÉÂì°ÊÇ®Â•ΩÔºÅÊ≠°ËøéÊÇ®ÂèÉÂä†Êú¨Ê¨°ÂïèÂç∑Ë™øÊü•Ê¥ªÂãïÔºÅ
      ÊìÅÊúâÂ∞àÂ±¨Ë≥áÊ†ºÁöÑÊúÉÂì°Âú®ÂÆåÊàêÂïèÂç∑‰∏îÈ©óË≠âÊúâÊïàÂæåÔºåÂ∞áÊúÉÈÄèÈÅéEMAILÁôºÈÄÅ90ÈªûMYCARDÈªûÊï∏Âç°Áµ¶ÊÇ®ÔºÅ
      ÈÇÑË´ãÊúÉÂì°ÂÄëÂ°´ÂØ´ÁúüÂØ¶Âª∫Ë≠∞ÔºåÂÜçÊ¨°ÊÑüË¨ùÊÇ®ÁöÑÂØ∂Ë≤¥ÊÑèË¶ãËàáÊîØÊåÅüòä
      ‚ÄªÊØèÂÄãË≥áÊ†ºÊúÉÂì°ÔºåÈôêÈ†ò‰πôÁµÑÈªûÊï∏Âç°„ÄÇ
       `,
      type: "statement",
    },
    {
      id: 1,
      question:
        "Ë´ãÂ°´ÂØ´ÊÇ®Âú®ÊòéÊó•‰πãÂæåÔºçÁëûÁßãÈõªÂè∞ÊàñÁ¨¨‰∫î‰∫∫Ê†ºÔºçËéäÂúíÂ∞èÁÆ°ÂÆ∂ÔºåÁî®ÊñºÂàùÊ¨°ÁôªË®ò‚ÄùÂ∞àÂ±¨ÊúçÂãô‚ÄùË≥áÊ†ºÁöÑÈÅäÊà≤ÂÖßIDÔºå‰ª•ÂèäÊÇ®ÁöÑÁî®Êà∂‰∏≠ÂøÉÂ∏≥ËôüID„ÄÇ*",
      answers: {
        a: "Â∏≥Ëôüid",
        b: "ËßíËâ≤id",
      },
      type: "input",
    },
    {
      id: 1,
      question: "ÁµÑË£ùË£Ω‰ΩúÈöéÊÆµ‰∏≠Ôºå‰Ω†ÊúÄÈúÄË¶ÅÂ≠∏Áøí‰ªÄÈ∫ºÂÖßÂÆπ*",
      answers: {
        a: "ÊàëË¶ÅÂ≠∏Âü∫Á§éÁµÑË£ùÔºåÁî®ÊúÄÊúâÊïàÁéáÁöÑÊñπÂºèÂÆåÊàêÁ¥†ÁµÑ",
        b: "ÊàëË¶ÅÂ≠∏ÈÄ≤ÈöéË£Ω‰ΩúÔºåÂ¢ûÂä†Á¥∞ÁØÄÔºåËÆì‰ΩúÂìÅÁ≤æÁ∑ªÂ∫¶ÁàÜÁôº",
        c: "Â∞èÂ≠©ÊâçÂÅöÈÅ∏ÊìáÔºåÂ§ß‰∫∫ÊàëÂÖ®ÈÉΩË¶ÅÔºÅ",
      },
      type: "choose",
    },
    {
      id: 2,
      question: "Ë≥™ÊÑüÂ°óË£ùÈöéÊÆµ‰∏≠Ôºå‰Ω†ÊúÄÈúÄË¶ÅÂ≠∏Áøí‰ªÄÈ∫ºÂÖßÂÆπÔºü",
      answers: {
        a: "ÊàëË¶ÅÂ≠∏Á≠ÜÂ°óÔºåÁ∑¥Â•ΩÂ°óË£ùÂü∫Êú¨ÂäüÁÇ∫ÈãºÂΩàÂùáÂãª‰∏äËâ≤",
        b: "ÊàëË¶ÅÂ≠∏Âü∫Á§éÂô¥ÊºÜÔºåË™øÈÖçÂá∫ÂøÉ‰∏≠ÁêÜÊÉ≥È°èËâ≤",
        c: "ÊàëË¶ÅÂ≠∏ÈÄ≤ÈöéÂô¥ÊºÜÔºå‰∏çÂèóÈ°èËâ≤ÊùüÁ∏õËá™Áî±Â±ïÁèæÂ§öËÆäÈ¢®Ê†º",
        d: "Â∞èÂ≠©ÊâçÂÅöÈÅ∏ÊìáÔºåÂ§ß‰∫∫ÊàëÂÖ®ÈÉΩË¶ÅÔºÅ",
      },
      type: "choose",
    },
  ];

  const currentItem = list.filter((item) => item.id === step)[0];

  return (
    <div className="bg-dark" style={{ height: "100vh" }}>
      <div>
        <div className="header_img container">
          {false && (
            <img
              src="\p\image\support_help\h55_wire_report_banner.png"
              className=" img-fluid rounded mx-auto  d-block"
              alt="demo pic"
            />
          )}
        </div>

        <div className="text-light">
          <div
            style={{ lineHeight: "32px", whiteSpace: "pre-line" }}
            className="h6 mt-1 p-3"
          >
            {currentItem
              ? `#${currentItem.id}. ${currentItem.question}`
              : "ÊÑüË¨ùÊÇ®ÁöÑ‰ΩúÁ≠î"}
          </div>
          {!currentItem && (
            <div>
              <button
                type="button"
                className="btn btn-danger mx-auto d-block "
                onClick={() => setStep(0)}
              >
                ÈáçÊñ∞‰æÜÈÅé
              </button>{" "}
            </div>
          )}

          {currentItem && (
            <div>
              {currentItem.type === "statement" ? (
                <button
                  type="button"
                  className="btn btn-danger mx-auto d-block "
                  onClick={() => setStep(step + 1)}
                >
                  OK
                </button>
              ) : (
                Object.keys(currentItem.answers).map((option) => (
                  <Fragment>
                    <div className="row">
                      <div className="col-sm-3"></div>
                      <div className="col-sm-6 d-block p-1 ">
                        <button
                          type="button"
                          className="btn btn-outline-info  btn-block text-left mt-2 ml-1 mr-1"
                          onClick={() => setStep(step + 1)}
                        >
                          {option} - {currentItem.answers[option]}
                        </button>
                      </div>
                      <div className="col-3"></div>
                    </div>
                  </Fragment>
                ))
              )}
            </div>
          )}
          <div className="row mt-5">
            <div className="col-md-4"></div>
            <div className="col-md-4">
              <div className="progress" style={{ height: "10px" }}>
                <div
                  className="progress-bar progress-bar-striped bg-info"
                  role="progressbar"
                  style={{ width: `${(step * 100) / list.length}%` }}
                  aria-valuenow={(step * 100) / list.length}
                  aria-valuemin="0"
                  aria-valuemax="100"
                >
                  {Number.parseInt((step * 100) / list.length)}%
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default SurveyMain;
